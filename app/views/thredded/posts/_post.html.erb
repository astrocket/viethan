<% post, content = post_and_content if local_assigns.key?(:post_and_content) %>
<%= content_tag :article, id: dom_id(post), class: "thredded--post thredded--#{post.read_state}--post" do %>
    <%= render 'thredded/posts_common/actions', post: post, actions: local_assigns[:actions] %>
    <%= render 'thredded/posts_common/header', post: post %>
    <%= content || render('thredded/posts/content', post: post) %>
    <% if post.pending_moderation? && !Thredded.content_visible_while_pending_moderation %>
        <p class="thredded--alert thredded--alert-warning"><%= t 'thredded.posts.pending_moderation_notice' %></p>
    <% elsif post.blocked? && post.can_moderate? %>
        <p class="thredded--alert thredded--alert-danger">
          <%= render 'thredded/shared/content_moderation_blocked_state', moderation_record: post.last_moderation_record %>
        </p>
    <% end %>
    <div id="render_reply_form_<%= post.to_model.id %>"></div>

    <% children = Thredded::TopicPostsPageView.new(thredded_current_user, post.to_model.postable, post.to_model.child_posts) %>
    <%= render_posts children,
                     partial: 'thredded/posts/post',
                     content_partial: 'thredded/posts/content',
                     locals: { actions: { quote: true } } %>

<% end %>
